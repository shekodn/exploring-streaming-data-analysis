Parameters:
  EC2InstanceType:
    Type: String
  EC2AMI:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  KeyName:
    Type: String
  CodePipelineBucket:
    Type: String

Resources:
  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      ShardCount: 2
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  DynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Vin"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Vin"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

      Tags:
        - Key: Name
          Value: !Ref AWS::StackName

  TheLambda:
    Type: AWS::Lambda::Function
    DependsOn: LambdaExecutionRole
    Properties:
      Code:
        S3Bucket: !Ref CodePipelineBucket
        S3Key: function.zip
      Description: 'TheLambda ARN'
      Handler: main
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: go1.x
      Tags:
        - Key: FunctionName
          Value: !Ref AWS::StackName

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action: sts:AssumeRole
      Description: 'LambdaExecutionRole ARN'
      # Policies:
      #   - AWSLambdaBasicExecutionRole
      Tags:
        - Key: RoleName
          Value: !Ref AWS::StackName

Outputs:
  KinesisStream:
    Description: 'Kinesis Stream ARN'
    Value: !Sub '${KinesisStream.Arn}'
    Export:
      Name: KinesisStreamArn
  LambdaExecutionRole:
    Description: 'LambdaExecutionRole ARN'
    Value: !Sub '${LambdaExecutionRole.Arn}'
    Export:
      Name: LambdaExecutionRole
  TheLambda:
    Description: 'TheLambda ARN'
    Value: !Sub '${TheLambda.Arn}'
    Export:
      Name: TheLambda
  DynamoDB:
    Description: 'DynamoDB ARN'
    Value: !Sub '${DynamoDB.Arn}'
    Export:
      Name: DynamoDB
